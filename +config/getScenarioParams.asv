function params = getScenarioParams(scenarioChoice, quartierChoice)
%GETSCENARIOPARAMS Return parameter struct for quartier and scenario
%   params = getScenarioParams(scenarioChoice, quartierChoice)
%   quartierChoice: 1=Stadtquartier(Verl), 2=Innenstädtisch(Berlin-Mitte),
%   3=Ländlich(Wolde)
%   scenarioChoice: 1=Aktuell, 2=2030, 3=2050
%
%   Die Parameter (z.B. EV-Zahl, Speicherkapazitäten, Gebäudetyp-
%   Gewichtungen) werden primär durch das gewählte Quartier bestimmt.
%   Das Szenario liefert nun individuelle Skalierungsfaktoren pro
%   Parameter, mit denen diese Quartierswerte angepasst werden können.

qcfg = quartierConfig();
scale = scenarioScale();

params = qcfg(quartierChoice);
factor = scale(scenarioChoice);

fields = {'capacityEV_kWh','pMaxEV_kW','numEV', ...
          'capacityBatt_kWh','pMaxBatt_kW','hpCount','pvScaleMWp', ...
          'flexStdMultiplier','flexWindowDays'};
for f = fields
    params.(f{1}) = params.(f{1}) * factor.(f{1});
end

% Anzahl der Wärmepumpen runden, damit aggregateWPModel ganzzahlige
% Werte erhält
params.hpCount = round(params.hpCount);

% Gebäudewichtungen ggf. skalieren
bw = params.buildingWeights;
names = fieldnames(bw);
for n = names'
    bw.(n{1}) = bw.(n{1}) * factor.buildingWeights;
end
params.buildingWeights = bw;
end

function cfg = quartierConfig()
%QUARTIERCONFIG Basiskonfiguration pro Quartier
%   Enthält u.a. Gewichtungen der einzelnen Gebäudetypen (Anzahl pro Quartier)
    cfg(1) = struct( ...
        'roundTripEff', 0.955, ...
        'useEV', true, ...
        'numEV', 810, ...
        'capacityEV_kWh', 810*48, ...
        'pMaxEV_kW', 810*11, ...
        'capacityBatt_kWh', 8600, ...
        'pMaxBatt_kW', 5500, ...
        'hpCount', 920, ...  %920
        'pvScaleMWp', 34, ...
        'flexStdMultiplier', 0.20, ...  % ±20 % Bandbreite um Wochenmittel
        'flexWindowDays', 1, ...        % (legacy) Fensterbreite, derzeit ungenutzt
        'buildingWeights', struct( ...
            'EFH',   4400, ...
            'MFH_k', 1300, ...
            'MFH_m', 900,  ...
            'MFH_g', 20  ) );
    
    % Berlin-Mitte
    bw2 = struct('EFH',719,'MFH_k',247,'MFH_m',10000,'MFH_g',3105);
    cfg(2) = struct( ...
        'roundTripEff', 0.955, ...
        'useEV', true, ...
        'numEV', 13000, ...
        'capacityEV_kWh', numEV*48, ...
        'pMaxEV_kW', numEV*11, ...
        'capacityBatt_kWh', 430, ...
        'pMaxBatt_kW', 257, ...
        'hpCount', 149*5, ...
        'pvScaleMWp', 2.064, ...
        'flexStdMultiplier', 0.20, ...
        'flexWindowDays', 1, ...
        'buildingWeights', bw2 );

    % Dorf-Wolde
    bw3 = struct('EFH',188,'MFH_k',19,'MFH_m',26,'MFH_g',0);
    cfg(3) = struct( ...
        'roundTripEff', 0.955, ...
        'useEV', true, ...
        'numEV', 12, ...
        'capacityEV_kWh', numEV*48, ...
        'pMaxEV_kW', numEV*11, ...
        'capacityBatt_kWh', 85, ...
        'pMaxBatt_kW', 66, ...
        'hpCount', 15, ... 
        'pvScaleMWp', 0.526, ...
        'flexStdMultiplier', 0.20, ...
        'flexWindowDays', 1, ...
        'buildingWeights', bw3 );
end

function scale = scenarioScale()
%SCENARIOSCALE Individuelle Skalierungsfaktoren für die Szenarien
    base = struct( ...
        'capacityEV_kWh', 1, ...
        'pMaxEV_kW', 1, ...
        'numEV', 1, ...
        'capacityBatt_kWh', 1, ...
        'pMaxBatt_kW', 1, ...
        'hpCount', 1, ...
        'pvScaleMWp', 1, ...
        'flexStdMultiplier', 1, ...
        'flexWindowDays', 1, ...
        'buildingWeights', 1 );

    scale(1) = base;  % Aktuell

        % Szenario 2030: moderate Steigerungen
    scale(2) = base;
    scale(2).capacityEV_kWh   = 1;   %%%
    scale(2).pMaxEV_kW        = 1;   %%%
    scale(2).numEV            = 6.86;   %%%
    scale(2).capacityBatt_kWh = ;   %%%
    scale(2).pMaxBatt_kW      = 1;   %%%
    scale(2).hpCount          = 2.63;   %%%
    scale(2).pvScaleMWp       = 1;   %%%
    scale(2).buildingWeights  = 1;   %%%

    % Szenario 2050: starke Steigerungen
    scale(3) = base;
    scale(3).capacityEV_kWh   = 1;   %%%
    scale(3).pMaxEV_kW        = 1;   %%%
    scale(3).numEV            = 24.47;   %%%
    scale(3).capacityBatt_kWh = 3.55;   %%%
    scale(3).pMaxBatt_kW      = 1.89;   %%%
    scale(3).hpCount          = 7.29;   %%%
    scale(3).pvScaleMWp       = 4.35;   %%%
    scale(3).buildingWeights  = 1;   %%%
end